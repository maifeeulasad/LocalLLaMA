[
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": 1,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t3",
          "data": {
            "approved_at_utc": null,
            "subreddit": "LocalLLaMA",
            "selftext": "Hi. Suppose we have a text2sql use case (or some other task where the LLM use case can easily get verified to some degree, ideally automatically): We ask a question, LLM generates the SQL code, we run the code, and the code is wrong. It could also happen that e.g. the SQL query returns empty result, but we are sure it shouldn't.\n\nWhat is the best way to incorporate these false answers as part of the context in the next LLM call, to help converge to the correct answer? \n\nAssuming an OpenAI-compatible REST API, is it part of the user message, a separate user message, another type of message, or something else? Is there a well-known practice?\n\nThanks",
            "user_reports": [],
            "saved": false,
            "mod_reason_title": null,
            "gilded": 0,
            "clicked": false,
            "title": "How do you provide negative examples to the LLM API?",
            "link_flair_richtext": [
              {
                "e": "text",
                "t": "Question | Help"
              }
            ],
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "hidden": false,
            "pwls": 6,
            "link_flair_css_class": "",
            "downs": 0,
            "thumbnail_height": null,
            "top_awarded_type": null,
            "hide_score": false,
            "name": "t3_1mcmt07",
            "quarantine": false,
            "link_flair_text_color": "dark",
            "upvote_ratio": 0.5,
            "author_flair_background_color": null,
            "subreddit_type": "public",
            "ups": 0,
            "total_awards_received": 0,
            "media_embed": {},
            "thumbnail_width": null,
            "author_flair_template_id": null,
            "is_original_content": false,
            "author_fullname": "t2_127kho",
            "secure_media": null,
            "is_reddit_media_domain": false,
            "is_meta": false,
            "category": null,
            "secure_media_embed": {},
            "link_flair_text": "Question | Help",
            "can_mod_post": false,
            "score": 0,
            "approved_by": null,
            "is_created_from_ads_ui": false,
            "author_premium": false,
            "thumbnail": "self",
            "edited": false,
            "author_flair_css_class": null,
            "author_flair_richtext": [],
            "gildings": {},
            "content_categories": null,
            "is_self": true,
            "mod_note": null,
            "created": 1753821440,
            "link_flair_type": "richtext",
            "wls": 6,
            "removed_by_category": null,
            "banned_by": null,
            "author_flair_type": "text",
            "domain": "self.LocalLLaMA",
            "allow_live_comments": false,
            "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi. Suppose we have a text2sql use case (or some other task where the LLM use case can easily get verified to some degree, ideally automatically): We ask a question, LLM generates the SQL code, we run the code, and the code is wrong. It could also happen that e.g. the SQL query returns empty result, but we are sure it shouldn&amp;#39;t.&lt;/p&gt;\n\n&lt;p&gt;What is the best way to incorporate these false answers as part of the context in the next LLM call, to help converge to the correct answer? &lt;/p&gt;\n\n&lt;p&gt;Assuming an OpenAI-compatible REST API, is it part of the user message, a separate user message, another type of message, or something else? Is there a well-known practice?&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
            "likes": null,
            "suggested_sort": null,
            "banned_at_utc": null,
            "view_count": null,
            "archived": false,
            "no_follow": true,
            "is_crosspostable": false,
            "pinned": false,
            "over_18": false,
            "all_awardings": [],
            "awarders": [],
            "media_only": false,
            "link_flair_template_id": "2c9831e6-bf92-11ed-98e6-d2b8bcc02ae1",
            "can_gild": false,
            "spoiler": false,
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "visited": false,
            "removed_by": null,
            "num_reports": null,
            "distinguished": null,
            "subreddit_id": "t5_81eyvm",
            "author_is_blocked": false,
            "mod_reason_by": null,
            "removal_reason": null,
            "link_flair_background_color": "#5a74cc",
            "id": "1mcmt07",
            "is_robot_indexable": true,
            "num_duplicates": 0,
            "report_reasons": null,
            "author": "ihatebeinganonymous",
            "discussion_type": null,
            "num_comments": 3,
            "send_replies": true,
            "media": null,
            "contest_mode": false,
            "author_patreon_flair": false,
            "author_flair_text_color": null,
            "permalink": "/r/LocalLLaMA/comments/1mcmt07/how_do_you_provide_negative_examples_to_the_llm/",
            "stickied": false,
            "url": "https://www.reddit.com/r/LocalLLaMA/comments/1mcmt07/how_do_you_provide_negative_examples_to_the_llm/",
            "subreddit_subscribers": 506973,
            "created_utc": 1753821440,
            "num_crossposts": 0,
            "mod_reports": [],
            "is_video": false
          }
        }
      ],
      "before": null
    }
  },
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": null,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t1",
          "data": {
            "subreddit_id": "t5_81eyvm",
            "approved_at_utc": null,
            "author_is_blocked": false,
            "comment_type": null,
            "awarders": [],
            "mod_reason_by": null,
            "banned_by": null,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "LocalLLaMA",
            "author_flair_template_id": null,
            "likes": null,
            "replies": {
              "kind": "Listing",
              "data": {
                "after": null,
                "dist": null,
                "modhash": "",
                "geo_filter": "",
                "children": [
                  {
                    "kind": "t1",
                    "data": {
                      "subreddit_id": "t5_81eyvm",
                      "approved_at_utc": null,
                      "author_is_blocked": false,
                      "comment_type": null,
                      "awarders": [],
                      "mod_reason_by": null,
                      "banned_by": null,
                      "author_flair_type": "text",
                      "total_awards_received": 0,
                      "subreddit": "LocalLLaMA",
                      "author_flair_template_id": null,
                      "likes": null,
                      "replies": {
                        "kind": "Listing",
                        "data": {
                          "after": null,
                          "dist": null,
                          "modhash": "",
                          "geo_filter": "",
                          "children": [
                            {
                              "kind": "t1",
                              "data": {
                                "subreddit_id": "t5_81eyvm",
                                "approved_at_utc": null,
                                "author_is_blocked": false,
                                "comment_type": null,
                                "awarders": [],
                                "mod_reason_by": null,
                                "banned_by": null,
                                "author_flair_type": "text",
                                "total_awards_received": 0,
                                "subreddit": "LocalLLaMA",
                                "author_flair_template_id": null,
                                "likes": null,
                                "replies": "",
                                "user_reports": [],
                                "saved": false,
                                "id": "n5wmq76",
                                "banned_at_utc": null,
                                "mod_reason_title": null,
                                "gilded": 0,
                                "archived": false,
                                "collapsed_reason_code": null,
                                "no_follow": true,
                                "author": "Double_Cause4609",
                                "can_mod_post": false,
                                "send_replies": true,
                                "parent_id": "t1_n5vu93h",
                                "score": 1,
                                "author_fullname": "t2_1kubzxt2ww",
                                "removal_reason": null,
                                "approved_by": null,
                                "mod_note": null,
                                "all_awardings": [],
                                "body": "It's not really fully codified and stabilized yet, but basically my understanding is that it's LLM systems with semantic feedback.\n\nSo, prompt optimization:  \n\\&gt; You are a travel planning agent, and your role is to plan a series of trips with the best ratio of countries visited to distance flown....  \n\\&gt; Certainly, here's an itinerary...  \n\\&gt; This plan hit 3 countries with 40 kilometers flown\n\nVersus prompt learning:  \n\\&gt; You are a travel planning agent...  \n\\&gt; Certainly....  \n\\&gt; This plan hit 3 countries with 40 kilometers thrown. It was in a region of the world with fairly large countries on average and the airports were all fairly central to each country. We might want to move over to a more dense region like Europe or Southeast Asia for the next iteration.\n\nObviously this is a trivial example, but I think you start to see where incorporating rich, semantic feedback changes how the system can optimize end to end and it gives different feedback than just scalar returns.\n\nMuch like context engineering technically is part of prompt engineering (and sometimes shares techniques) but shows a different focus (on careful, structured patterns that minimize context creep), prompt learning is very similar to a lot of ideas you've already worked with and projects you never got around to finishing, but the name implies a more specific focus and more precise set of common techniques used to solve various problems in the space.",
                                "edited": false,
                                "top_awarded_type": null,
                                "downs": 0,
                                "author_flair_css_class": null,
                                "name": "t1_n5wmq76",
                                "is_submitter": false,
                                "collapsed": false,
                                "author_flair_richtext": [],
                                "author_patreon_flair": false,
                                "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not really fully codified and stabilized yet, but basically my understanding is that it&amp;#39;s LLM systems with semantic feedback.&lt;/p&gt;\n\n&lt;p&gt;So, prompt optimization:&lt;br/&gt;\n&amp;gt; You are a travel planning agent, and your role is to plan a series of trips with the best ratio of countries visited to distance flown....&lt;br/&gt;\n&amp;gt; Certainly, here&amp;#39;s an itinerary...&lt;br/&gt;\n&amp;gt; This plan hit 3 countries with 40 kilometers flown&lt;/p&gt;\n\n&lt;p&gt;Versus prompt learning:&lt;br/&gt;\n&amp;gt; You are a travel planning agent...&lt;br/&gt;\n&amp;gt; Certainly....&lt;br/&gt;\n&amp;gt; This plan hit 3 countries with 40 kilometers thrown. It was in a region of the world with fairly large countries on average and the airports were all fairly central to each country. We might want to move over to a more dense region like Europe or Southeast Asia for the next iteration.&lt;/p&gt;\n\n&lt;p&gt;Obviously this is a trivial example, but I think you start to see where incorporating rich, semantic feedback changes how the system can optimize end to end and it gives different feedback than just scalar returns.&lt;/p&gt;\n\n&lt;p&gt;Much like context engineering technically is part of prompt engineering (and sometimes shares techniques) but shows a different focus (on careful, structured patterns that minimize context creep), prompt learning is very similar to a lot of ideas you&amp;#39;ve already worked with and projects you never got around to finishing, but the name implies a more specific focus and more precise set of common techniques used to solve various problems in the space.&lt;/p&gt;\n&lt;/div&gt;",
                                "gildings": {},
                                "collapsed_reason": null,
                                "distinguished": null,
                                "associated_award": null,
                                "stickied": false,
                                "author_premium": false,
                                "can_gild": false,
                                "link_id": "t3_1mcmt07",
                                "unrepliable_reason": null,
                                "author_flair_text_color": null,
                                "score_hidden": false,
                                "permalink": "/r/LocalLLaMA/comments/1mcmt07/how_do_you_provide_negative_examples_to_the_llm/n5wmq76/",
                                "subreddit_type": "public",
                                "locked": false,
                                "report_reasons": null,
                                "created": 1753840655,
                                "author_flair_text": null,
                                "treatment_tags": [],
                                "created_utc": 1753840655,
                                "subreddit_name_prefixed": "r/LocalLLaMA",
                                "controversiality": 0,
                                "depth": 2,
                                "author_flair_background_color": null,
                                "collapsed_because_crowd_control": null,
                                "mod_reports": [],
                                "num_reports": null,
                                "ups": 1
                              }
                            }
                          ],
                          "before": null
                        }
                      },
                      "user_reports": [],
                      "saved": false,
                      "id": "n5vu93h",
                      "banned_at_utc": null,
                      "mod_reason_title": null,
                      "gilded": 0,
                      "archived": false,
                      "collapsed_reason_code": null,
                      "no_follow": true,
                      "author": "Agreeable-Market-692",
                      "can_mod_post": false,
                      "created_utc": 1753830952,
                      "send_replies": true,
                      "parent_id": "t1_n5v06qc",
                      "score": 2,
                      "author_fullname": "t2_ajuhoi00",
                      "removal_reason": null,
                      "approved_by": null,
                      "mod_note": null,
                      "all_awardings": [],
                      "body": "What is prompt learning? ICL?",
                      "edited": false,
                      "top_awarded_type": null,
                      "author_flair_css_class": null,
                      "name": "t1_n5vu93h",
                      "is_submitter": false,
                      "downs": 0,
                      "author_flair_richtext": [],
                      "author_patreon_flair": false,
                      "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is prompt learning? ICL?&lt;/p&gt;\n&lt;/div&gt;",
                      "gildings": {},
                      "collapsed_reason": null,
                      "distinguished": null,
                      "associated_award": null,
                      "stickied": false,
                      "author_premium": false,
                      "can_gild": false,
                      "link_id": "t3_1mcmt07",
                      "unrepliable_reason": null,
                      "author_flair_text_color": null,
                      "score_hidden": false,
                      "permalink": "/r/LocalLLaMA/comments/1mcmt07/how_do_you_provide_negative_examples_to_the_llm/n5vu93h/",
                      "subreddit_type": "public",
                      "locked": false,
                      "report_reasons": null,
                      "created": 1753830952,
                      "author_flair_text": null,
                      "treatment_tags": [],
                      "collapsed": false,
                      "subreddit_name_prefixed": "r/LocalLLaMA",
                      "controversiality": 0,
                      "depth": 1,
                      "author_flair_background_color": null,
                      "collapsed_because_crowd_control": null,
                      "mod_reports": [],
                      "num_reports": null,
                      "ups": 2
                    }
                  }
                ],
                "before": null
              }
            },
            "user_reports": [],
            "saved": false,
            "id": "n5v06qc",
            "banned_at_utc": null,
            "mod_reason_title": null,
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "Double_Cause4609",
            "can_mod_post": false,
            "created_utc": 1753821799,
            "send_replies": true,
            "parent_id": "t3_1mcmt07",
            "score": 4,
            "author_fullname": "t2_1kubzxt2ww",
            "approved_by": null,
            "mod_note": null,
            "all_awardings": [],
            "collapsed": false,
            "body": "To my knowledge CFG-like negative examples are technically possible in LLMs (see: TabbyAPI supports them, I think if you're running locally), but it's not super common and is somewhat experimental. If you do that, it might just push the model away from code at all rather than away from incorrect code.\n\nMore practical is prompt engineering, prompt optimization, and prompt learning.\n\nAll of these are unique things (yes, really!), and there's even subsets within each. Personally I'd prefer to label the negative examples and use them in a DSPy optimization run, but you can use other options (a lot of early papers into Agents and proto-agent-like things had good documentation for this, like \"Eureka!\" etc).\n\nPersonally, though, rather than use negative examples, I'd prefer to use a high quality LLM to produce good calls, and use those as positive examples, and also used structured outputs on the small student LLM at inference time.\n\nI find that LLMs match patterns almost too well, so even if you say \"this is bad\", it will sometimes imitate the bad thing rather than doing the good thing, necessarily, because the bad thing is in context. I prefer for the LLM to not be thinking about it at all.",
            "edited": false,
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "name": "t1_n5v06qc",
            "is_submitter": false,
            "downs": 0,
            "author_flair_richtext": [],
            "author_patreon_flair": false,
            "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To my knowledge CFG-like negative examples are technically possible in LLMs (see: TabbyAPI supports them, I think if you&amp;#39;re running locally), but it&amp;#39;s not super common and is somewhat experimental. If you do that, it might just push the model away from code at all rather than away from incorrect code.&lt;/p&gt;\n\n&lt;p&gt;More practical is prompt engineering, prompt optimization, and prompt learning.&lt;/p&gt;\n\n&lt;p&gt;All of these are unique things (yes, really!), and there&amp;#39;s even subsets within each. Personally I&amp;#39;d prefer to label the negative examples and use them in a DSPy optimization run, but you can use other options (a lot of early papers into Agents and proto-agent-like things had good documentation for this, like &amp;quot;Eureka!&amp;quot; etc).&lt;/p&gt;\n\n&lt;p&gt;Personally, though, rather than use negative examples, I&amp;#39;d prefer to use a high quality LLM to produce good calls, and use those as positive examples, and also used structured outputs on the small student LLM at inference time.&lt;/p&gt;\n\n&lt;p&gt;I find that LLMs match patterns almost too well, so even if you say &amp;quot;this is bad&amp;quot;, it will sometimes imitate the bad thing rather than doing the good thing, necessarily, because the bad thing is in context. I prefer for the LLM to not be thinking about it at all.&lt;/p&gt;\n&lt;/div&gt;",
            "removal_reason": null,
            "collapsed_reason": null,
            "distinguished": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": false,
            "gildings": {},
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": false,
            "permalink": "/r/LocalLLaMA/comments/1mcmt07/how_do_you_provide_negative_examples_to_the_llm/n5v06qc/",
            "subreddit_type": "public",
            "locked": false,
            "report_reasons": null,
            "created": 1753821799,
            "author_flair_text": null,
            "treatment_tags": [],
            "link_id": "t3_1mcmt07",
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "controversiality": 0,
            "depth": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "mod_reports": [],
            "num_reports": null,
            "ups": 4
          }
        }
      ],
      "before": null
    }
  }
]