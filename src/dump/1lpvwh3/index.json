[
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": 1,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t3",
          "data": {
            "approved_at_utc": null,
            "subreddit": "LocalLLaMA",
            "selftext": "Been working with LLMs for a while and got tired of manually tracking prompt versions. Made a Python tool that handles this automatically.\n\n# What it does\n\n* Automatically versions your prompts when you commit to git\n* Test prompt changes before committing with `:unstaged` reference\n* Works with any LLM (OpenAI, Anthropic, local models)\n* Zero manual version management\n\n# Quick example\n\n    from llmhq_promptops import get_prompt\n    \n    # Get the working version\n    prompt = get_prompt(\"user-greeting\")\n    \n    # Test uncommitted changes  \n    prompt = get_prompt(\"user-greeting:unstaged\")\n    \n    # Specific version\n    prompt = get_prompt(\"user-greeting:v1.2.0\")\n    \n\n# Install\n\n    pip install llmhq-promptops\n    promptops init repo\n    \n\nThe git hooks handle versioning automatically - PATCH for content changes, MINOR for new variables, MAJOR for breaking changes.\n\nThought this community might find it useful since we all deal with prompt management headaches.\n\nGitHub: [https://github.com/llmhq-hub/promptops](https://github.com/llmhq-hub/promptops)",
            "user_reports": [],
            "saved": false,
            "mod_reason_title": null,
            "gilded": 0,
            "clicked": false,
            "title": "I built a tool for managing prompts like code in git",
            "link_flair_richtext": [
              {
                "e": "text",
                "t": "Discussion"
              }
            ],
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "hidden": false,
            "pwls": 6,
            "link_flair_css_class": "",
            "downs": 0,
            "thumbnail_height": null,
            "top_awarded_type": null,
            "hide_score": false,
            "name": "t3_1lpvwh3",
            "quarantine": false,
            "link_flair_text_color": "light",
            "upvote_ratio": 1,
            "author_flair_background_color": null,
            "subreddit_type": "public",
            "ups": 1,
            "total_awards_received": 0,
            "media_embed": {},
            "thumbnail_width": null,
            "author_flair_template_id": null,
            "is_original_content": false,
            "author_fullname": "t2_1spkozujfu",
            "secure_media": null,
            "is_reddit_media_domain": false,
            "is_meta": false,
            "category": null,
            "secure_media_embed": {},
            "link_flair_text": "Discussion",
            "can_mod_post": false,
            "score": 1,
            "approved_by": null,
            "is_created_from_ads_ui": false,
            "author_premium": false,
            "thumbnail": "self",
            "edited": false,
            "author_flair_css_class": null,
            "author_flair_richtext": [],
            "gildings": {},
            "post_hint": "self",
            "content_categories": null,
            "is_self": true,
            "mod_note": null,
            "created": 1751462982,
            "link_flair_type": "richtext",
            "wls": 6,
            "removed_by_category": null,
            "banned_by": null,
            "author_flair_type": "text",
            "domain": "self.LocalLLaMA",
            "allow_live_comments": false,
            "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Been working with LLMs for a while and got tired of manually tracking prompt versions. Made a Python tool that handles this automatically.&lt;/p&gt;\n\n&lt;h1&gt;What it does&lt;/h1&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Automatically versions your prompts when you commit to git&lt;/li&gt;\n&lt;li&gt;Test prompt changes before committing with &lt;code&gt;:unstaged&lt;/code&gt; reference&lt;/li&gt;\n&lt;li&gt;Works with any LLM (OpenAI, Anthropic, local models)&lt;/li&gt;\n&lt;li&gt;Zero manual version management&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;Quick example&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;from llmhq_promptops import get_prompt\n\n# Get the working version\nprompt = get_prompt(&amp;quot;user-greeting&amp;quot;)\n\n# Test uncommitted changes  \nprompt = get_prompt(&amp;quot;user-greeting:unstaged&amp;quot;)\n\n# Specific version\nprompt = get_prompt(&amp;quot;user-greeting:v1.2.0&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Install&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;pip install llmhq-promptops\npromptops init repo\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The git hooks handle versioning automatically - PATCH for content changes, MINOR for new variables, MAJOR for breaking changes.&lt;/p&gt;\n\n&lt;p&gt;Thought this community might find it useful since we all deal with prompt management headaches.&lt;/p&gt;\n\n&lt;p&gt;GitHub: &lt;a href=\"https://github.com/llmhq-hub/promptops\"&gt;https://github.com/llmhq-hub/promptops&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
            "likes": null,
            "suggested_sort": null,
            "banned_at_utc": null,
            "view_count": null,
            "archived": false,
            "no_follow": true,
            "is_crosspostable": false,
            "pinned": false,
            "over_18": false,
            "preview": {
              "images": [
                {
                  "source": {
                    "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?auto=webp&amp;s=6a6c99ca9be235d457062f87f3b149157c4a26ae",
                    "width": 1200,
                    "height": 600
                  },
                  "resolutions": [
                    {
                      "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=9491dac3eef562b93c4c641b452ed1c66f284300",
                      "width": 108,
                      "height": 54
                    },
                    {
                      "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=9ff720421d1acf755d519c6f53cbc8150ddd3379",
                      "width": 216,
                      "height": 108
                    },
                    {
                      "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=5abd9c79f170a57ec48b9a058ab2d387a5ff9a5a",
                      "width": 320,
                      "height": 160
                    },
                    {
                      "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=a949604c681b87d948795220ff74ef38c6d42554",
                      "width": 640,
                      "height": 320
                    },
                    {
                      "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=945473ff68aaa3a2a4b9caeadbfea5a151b8f32f",
                      "width": 960,
                      "height": 480
                    },
                    {
                      "url": "https://external-preview.redd.it/o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c397c249b778d96b40fc73be47421fcd97fdd990",
                      "width": 1080,
                      "height": 540
                    }
                  ],
                  "variants": {},
                  "id": "o3PmNP2OL7ctHNAdRCSQSrdK0jT5IPtsBfFR7S-4acQ"
                }
              ],
              "enabled": false
            },
            "all_awardings": [],
            "awarders": [],
            "media_only": false,
            "link_flair_template_id": "5f921ea4-c7bc-11ed-9c23-3a00622979b4",
            "can_gild": false,
            "spoiler": false,
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "visited": false,
            "removed_by": null,
            "num_reports": null,
            "distinguished": null,
            "subreddit_id": "t5_81eyvm",
            "author_is_blocked": false,
            "mod_reason_by": null,
            "removal_reason": null,
            "link_flair_background_color": "#646d73",
            "id": "1lpvwh3",
            "is_robot_indexable": true,
            "num_duplicates": 0,
            "report_reasons": null,
            "author": "llmhq_official",
            "discussion_type": null,
            "num_comments": 0,
            "send_replies": true,
            "media": null,
            "contest_mode": false,
            "author_patreon_flair": false,
            "author_flair_text_color": null,
            "permalink": "/r/LocalLLaMA/comments/1lpvwh3/i_built_a_tool_for_managing_prompts_like_code_in/",
            "stickied": false,
            "url": "https://www.reddit.com/r/LocalLLaMA/comments/1lpvwh3/i_built_a_tool_for_managing_prompts_like_code_in/",
            "subreddit_subscribers": 494001,
            "created_utc": 1751462982,
            "num_crossposts": 0,
            "mod_reports": [],
            "is_video": false
          }
        }
      ],
      "before": null
    }
  },
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": null,
      "modhash": "",
      "geo_filter": "",
      "children": [],
      "before": null
    }
  }
]