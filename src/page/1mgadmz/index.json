[
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": 1,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t3",
          "data": {
            "approved_at_utc": null,
            "subreddit": "LocalLLaMA",
            "selftext": "Hey everyone,\n\nI'm looking for advice on building a robust, self-hosted RAG system with a strong emphasis on **long-term, low-maintenance operation**. My goal is to create a powerful knowledge engine that I can \"set and forget\" as much as possible, without needing constant daily troubleshooting.\n\nThe entire system must run **100% locally** on a single machine with a **16GB VRAM GPU** (RTX 5070 Ti).\n\nMy knowledge base is unique and large: **36,000+ ePub files, all in Arabic**. The system needs to handle multilingual queries (**Indonesian, English, Arabic**) and provide accurate, cited answers.\n\nTo achieve low maintenance, my core idea is a **decoupled architecture**, where each component runs independently (e.g., in separate containers). My reasoning is:\n\n* If the UI (Open WebUI) breaks, the backend is unaffected.\n* If I want to swap the LLM in Ollama, I don't need to touch the RAG logic code.\n* Most importantly, re-indexing the entire 36k ePub corpus (a massive background task) shouldn't take down the live Q&amp;A service.\n\nGiven the focus on stability and a 16GB VRAM limit, I'd love your recommendations on:\n\n* **Vector Database:** Which vector store offers the **easiest management, backup, and recovery process** for a local setup? I need something that \"just works\" without constant administration. Are **ChromaDB**, **LanceDB**, or a simple file-based **FAISS** index the most reliable choices here?\n* **Data Ingestion Pipeline:** What is the most **resilient and automated** way to build the ingestion pipeline for the 36k ePubs? My plan is a separate, scheduled script that processes new/updated files. Is this more maintainable than building it into the main API?\n* **Stable Models (Embeddings &amp; LLM):** Beyond pure performance, which **embedding and LLM models** are known for their stability and good long-term support? I want to avoid using a \"flavor-of-the-month\" model that might be abandoned. The models must handle Arabic, Indonesian, and English well and fit within the VRAM budget.\n* **VRAM Budgeting:** How do you wisely allocate a **16GB VRAM budget** between the LLM, embedding model, and a potential re-ranker to ensure system stability and avoid \"out of memory\" errors during peak use?\n* **Reliable Cross-Lingual Flow:** For handling Indonesian/English queries against Arabic text, what's the most *reliable* method? Is translating queries first more robust in the long run than relying solely on a multilingual embedding space?\n\n  \nAny help or suggestions would be greatly appreciated! I'd like to hear more about the setups you all use and what's worked best for you.\n\nThank you!",
            "user_reports": [],
            "saved": false,
            "mod_reason_title": null,
            "gilded": 0,
            "clicked": false,
            "title": "Seeking a way to implement Low-Maintenance, Fully Local RAG Stack for a 16GB VRAM Setup (36k Arabic epub Docs)",
            "link_flair_richtext": [
              {
                "e": "text",
                "t": "Question | Help"
              }
            ],
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "hidden": false,
            "pwls": 6,
            "link_flair_css_class": "",
            "downs": 0,
            "thumbnail_height": null,
            "top_awarded_type": null,
            "hide_score": false,
            "name": "t3_1mgadmz",
            "quarantine": false,
            "link_flair_text_color": "dark",
            "upvote_ratio": 0.63,
            "author_flair_background_color": null,
            "subreddit_type": "public",
            "ups": 2,
            "total_awards_received": 0,
            "media_embed": {},
            "thumbnail_width": null,
            "author_flair_template_id": null,
            "is_original_content": false,
            "author_fullname": "t2_jx01itfg",
            "secure_media": null,
            "is_reddit_media_domain": false,
            "is_meta": false,
            "category": null,
            "secure_media_embed": {},
            "link_flair_text": "Question | Help",
            "can_mod_post": false,
            "score": 2,
            "approved_by": null,
            "is_created_from_ads_ui": false,
            "author_premium": false,
            "thumbnail": "self",
            "edited": false,
            "author_flair_css_class": null,
            "author_flair_richtext": [],
            "gildings": {},
            "content_categories": null,
            "is_self": true,
            "mod_note": null,
            "created": 1754195719,
            "link_flair_type": "richtext",
            "wls": 6,
            "removed_by_category": null,
            "banned_by": null,
            "author_flair_type": "text",
            "domain": "self.LocalLLaMA",
            "allow_live_comments": false,
            "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m looking for advice on building a robust, self-hosted RAG system with a strong emphasis on &lt;strong&gt;long-term, low-maintenance operation&lt;/strong&gt;. My goal is to create a powerful knowledge engine that I can &amp;quot;set and forget&amp;quot; as much as possible, without needing constant daily troubleshooting.&lt;/p&gt;\n\n&lt;p&gt;The entire system must run &lt;strong&gt;100% locally&lt;/strong&gt; on a single machine with a &lt;strong&gt;16GB VRAM GPU&lt;/strong&gt; (RTX 5070 Ti).&lt;/p&gt;\n\n&lt;p&gt;My knowledge base is unique and large: &lt;strong&gt;36,000+ ePub files, all in Arabic&lt;/strong&gt;. The system needs to handle multilingual queries (&lt;strong&gt;Indonesian, English, Arabic&lt;/strong&gt;) and provide accurate, cited answers.&lt;/p&gt;\n\n&lt;p&gt;To achieve low maintenance, my core idea is a &lt;strong&gt;decoupled architecture&lt;/strong&gt;, where each component runs independently (e.g., in separate containers). My reasoning is:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If the UI (Open WebUI) breaks, the backend is unaffected.&lt;/li&gt;\n&lt;li&gt;If I want to swap the LLM in Ollama, I don&amp;#39;t need to touch the RAG logic code.&lt;/li&gt;\n&lt;li&gt;Most importantly, re-indexing the entire 36k ePub corpus (a massive background task) shouldn&amp;#39;t take down the live Q&amp;amp;A service.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Given the focus on stability and a 16GB VRAM limit, I&amp;#39;d love your recommendations on:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Vector Database:&lt;/strong&gt; Which vector store offers the &lt;strong&gt;easiest management, backup, and recovery process&lt;/strong&gt; for a local setup? I need something that &amp;quot;just works&amp;quot; without constant administration. Are &lt;strong&gt;ChromaDB&lt;/strong&gt;, &lt;strong&gt;LanceDB&lt;/strong&gt;, or a simple file-based &lt;strong&gt;FAISS&lt;/strong&gt; index the most reliable choices here?&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Data Ingestion Pipeline:&lt;/strong&gt; What is the most &lt;strong&gt;resilient and automated&lt;/strong&gt; way to build the ingestion pipeline for the 36k ePubs? My plan is a separate, scheduled script that processes new/updated files. Is this more maintainable than building it into the main API?&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Stable Models (Embeddings &amp;amp; LLM):&lt;/strong&gt; Beyond pure performance, which &lt;strong&gt;embedding and LLM models&lt;/strong&gt; are known for their stability and good long-term support? I want to avoid using a &amp;quot;flavor-of-the-month&amp;quot; model that might be abandoned. The models must handle Arabic, Indonesian, and English well and fit within the VRAM budget.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;VRAM Budgeting:&lt;/strong&gt; How do you wisely allocate a &lt;strong&gt;16GB VRAM budget&lt;/strong&gt; between the LLM, embedding model, and a potential re-ranker to ensure system stability and avoid &amp;quot;out of memory&amp;quot; errors during peak use?&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Reliable Cross-Lingual Flow:&lt;/strong&gt; For handling Indonesian/English queries against Arabic text, what&amp;#39;s the most &lt;em&gt;reliable&lt;/em&gt; method? Is translating queries first more robust in the long run than relying solely on a multilingual embedding space?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Any help or suggestions would be greatly appreciated! I&amp;#39;d like to hear more about the setups you all use and what&amp;#39;s worked best for you.&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
            "likes": null,
            "suggested_sort": null,
            "banned_at_utc": null,
            "view_count": null,
            "archived": false,
            "no_follow": true,
            "is_crosspostable": false,
            "pinned": false,
            "over_18": false,
            "all_awardings": [],
            "awarders": [],
            "media_only": false,
            "link_flair_template_id": "2c9831e6-bf92-11ed-98e6-d2b8bcc02ae1",
            "can_gild": false,
            "spoiler": false,
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "visited": false,
            "removed_by": null,
            "num_reports": null,
            "distinguished": null,
            "subreddit_id": "t5_81eyvm",
            "author_is_blocked": false,
            "mod_reason_by": null,
            "removal_reason": null,
            "link_flair_background_color": "#5a74cc",
            "id": "1mgadmz",
            "is_robot_indexable": true,
            "num_duplicates": 0,
            "report_reasons": null,
            "author": "rfiraz",
            "discussion_type": null,
            "num_comments": 1,
            "send_replies": true,
            "media": null,
            "contest_mode": false,
            "author_patreon_flair": false,
            "author_flair_text_color": null,
            "permalink": "/r/LocalLLaMA/comments/1mgadmz/seeking_a_way_to_implement_lowmaintenance_fully/",
            "stickied": false,
            "url": "https://www.reddit.com/r/LocalLLaMA/comments/1mgadmz/seeking_a_way_to_implement_lowmaintenance_fully/",
            "subreddit_subscribers": 509626,
            "created_utc": 1754195719,
            "num_crossposts": 0,
            "mod_reports": [],
            "is_video": false
          }
        }
      ],
      "before": null
    }
  },
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": null,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t1",
          "data": {
            "subreddit_id": "t5_81eyvm",
            "approved_at_utc": null,
            "author_is_blocked": false,
            "comment_type": null,
            "awarders": [],
            "mod_reason_by": null,
            "banned_by": null,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "LocalLLaMA",
            "author_flair_template_id": null,
            "likes": null,
            "replies": "",
            "user_reports": [],
            "saved": false,
            "id": "n6no22q",
            "banned_at_utc": null,
            "mod_reason_title": null,
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": true,
            "author": "No_Efficiency_1144",
            "can_mod_post": false,
            "created_utc": 1754204999,
            "send_replies": true,
            "parent_id": "t3_1mgadmz",
            "score": 1,
            "author_fullname": "t2_1nkj9l14b0",
            "approved_by": null,
            "mod_note": null,
            "all_awardings": [],
            "collapsed": false,
            "body": "Fundamentally you want two things for the most part:\n\n\n1. A neural network from which you will extract internal representations. Distance metrics can be used to measure differences in representations.\n\n\n2. A neural network, or set of neural networks, that you will use to classify pairs and groups of inputs.",
            "edited": false,
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "name": "t1_n6no22q",
            "is_submitter": false,
            "downs": 0,
            "author_flair_richtext": [],
            "author_patreon_flair": false,
            "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fundamentally you want two things for the most part:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;A neural network from which you will extract internal representations. Distance metrics can be used to measure differences in representations.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;A neural network, or set of neural networks, that you will use to classify pairs and groups of inputs.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;",
            "removal_reason": null,
            "collapsed_reason": null,
            "distinguished": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": false,
            "gildings": {},
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": false,
            "permalink": "/r/LocalLLaMA/comments/1mgadmz/seeking_a_way_to_implement_lowmaintenance_fully/n6no22q/",
            "subreddit_type": "public",
            "locked": false,
            "report_reasons": null,
            "created": 1754204999,
            "author_flair_text": null,
            "treatment_tags": [],
            "link_id": "t3_1mgadmz",
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "controversiality": 0,
            "depth": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "mod_reports": [],
            "num_reports": null,
            "ups": 1
          }
        }
      ],
      "before": null
    }
  }
]