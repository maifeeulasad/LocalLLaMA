[
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": 1,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t3",
          "data": {
            "approved_at_utc": null,
            "subreddit": "LocalLLaMA",
            "selftext": "I spent the weekend crafting this open-source PyTorch implementation of Google's [CRISP paper (arXiv:2505.11471)](https://arxiv.org/pdf/2505.11471). The repository provides a direct, hands-on comparison between CRISP's in-training clustering and the more traditional post-hoc approach.\n\nFor context, the core problem with multi-vector models (e.g., ColBERT) is their massive index size. The common solution is to cluster embeddings *after* training (post-hoc), but this is an imperfect patch. CRISP argues for integrating clustering *during* training to force the model to learn inherently \"clusterable\" representations.\n\nThe repository sets up a clean head-to-head experiment to test that claim. Here's a breakdown of the results from its built-in pipeline.\n\n[https://github.com/sigridjineth/crisp-py](https://github.com/sigridjineth/crisp-py)\n\nI tried few experiments with minilm-l6-v2 in Macbook Pro and found that CRISP-tuned model assigns a significantly higher similarity score to the correct document.",
            "user_reports": [],
            "saved": false,
            "mod_reason_title": null,
            "gilded": 0,
            "clicked": false,
            "title": "I tried implementing the CRISP paper from Google Deepmind in Python",
            "link_flair_richtext": [
              {
                "e": "text",
                "t": "Resources"
              }
            ],
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "hidden": false,
            "pwls": 6,
            "link_flair_css_class": "",
            "downs": 0,
            "thumbnail_height": null,
            "top_awarded_type": null,
            "hide_score": false,
            "name": "t3_1maixye",
            "quarantine": false,
            "link_flair_text_color": "light",
            "upvote_ratio": 0.87,
            "author_flair_background_color": null,
            "subreddit_type": "public",
            "ups": 32,
            "total_awards_received": 0,
            "media_embed": {},
            "thumbnail_width": null,
            "author_flair_template_id": null,
            "is_original_content": false,
            "author_fullname": "t2_iu3wj4b6",
            "secure_media": null,
            "is_reddit_media_domain": false,
            "is_meta": false,
            "category": null,
            "secure_media_embed": {},
            "link_flair_text": "Resources",
            "can_mod_post": false,
            "score": 32,
            "approved_by": null,
            "is_created_from_ads_ui": false,
            "author_premium": false,
            "thumbnail": "self",
            "edited": 1753621643,
            "author_flair_css_class": null,
            "author_flair_richtext": [],
            "gildings": {},
            "content_categories": null,
            "is_self": true,
            "mod_note": null,
            "created": 1753611989,
            "link_flair_type": "richtext",
            "wls": 6,
            "removed_by_category": null,
            "banned_by": null,
            "author_flair_type": "text",
            "domain": "self.LocalLLaMA",
            "allow_live_comments": false,
            "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I spent the weekend crafting this open-source PyTorch implementation of Google&amp;#39;s &lt;a href=\"https://arxiv.org/pdf/2505.11471\"&gt;CRISP paper (arXiv:2505.11471)&lt;/a&gt;. The repository provides a direct, hands-on comparison between CRISP&amp;#39;s in-training clustering and the more traditional post-hoc approach.&lt;/p&gt;\n\n&lt;p&gt;For context, the core problem with multi-vector models (e.g., ColBERT) is their massive index size. The common solution is to cluster embeddings &lt;em&gt;after&lt;/em&gt; training (post-hoc), but this is an imperfect patch. CRISP argues for integrating clustering &lt;em&gt;during&lt;/em&gt; training to force the model to learn inherently &amp;quot;clusterable&amp;quot; representations.&lt;/p&gt;\n\n&lt;p&gt;The repository sets up a clean head-to-head experiment to test that claim. Here&amp;#39;s a breakdown of the results from its built-in pipeline.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sigridjineth/crisp-py\"&gt;https://github.com/sigridjineth/crisp-py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I tried few experiments with minilm-l6-v2 in Macbook Pro and found that CRISP-tuned model assigns a significantly higher similarity score to the correct document.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
            "likes": null,
            "suggested_sort": null,
            "banned_at_utc": null,
            "view_count": null,
            "archived": false,
            "no_follow": false,
            "is_crosspostable": false,
            "pinned": false,
            "over_18": false,
            "all_awardings": [],
            "awarders": [],
            "media_only": false,
            "link_flair_template_id": "ab9120c4-bf8e-11ed-ae5e-2eb8b7c7e10b",
            "can_gild": false,
            "spoiler": false,
            "locked": false,
            "author_flair_text": null,
            "treatment_tags": [],
            "visited": false,
            "removed_by": null,
            "num_reports": null,
            "distinguished": null,
            "subreddit_id": "t5_81eyvm",
            "author_is_blocked": false,
            "mod_reason_by": null,
            "removal_reason": null,
            "link_flair_background_color": "#ccac2b",
            "id": "1maixye",
            "is_robot_indexable": true,
            "num_duplicates": 0,
            "report_reasons": null,
            "author": "Ok_Rub1689",
            "discussion_type": null,
            "num_comments": 2,
            "send_replies": true,
            "media": null,
            "contest_mode": false,
            "author_patreon_flair": false,
            "author_flair_text_color": null,
            "permalink": "/r/LocalLLaMA/comments/1maixye/i_tried_implementing_the_crisp_paper_from_google/",
            "stickied": false,
            "url": "https://www.reddit.com/r/LocalLLaMA/comments/1maixye/i_tried_implementing_the_crisp_paper_from_google/",
            "subreddit_subscribers": 505881,
            "created_utc": 1753611989,
            "num_crossposts": 0,
            "mod_reports": [],
            "is_video": false
          }
        }
      ],
      "before": null
    }
  },
  {
    "kind": "Listing",
    "data": {
      "after": null,
      "dist": null,
      "modhash": "",
      "geo_filter": "",
      "children": [
        {
          "kind": "t1",
          "data": {
            "subreddit_id": "t5_81eyvm",
            "approved_at_utc": null,
            "author_is_blocked": false,
            "comment_type": null,
            "awarders": [],
            "mod_reason_by": null,
            "banned_by": null,
            "author_flair_type": "text",
            "total_awards_received": 0,
            "subreddit": "LocalLLaMA",
            "author_flair_template_id": null,
            "likes": null,
            "replies": {
              "kind": "Listing",
              "data": {
                "after": null,
                "dist": null,
                "modhash": "",
                "geo_filter": "",
                "children": [
                  {
                    "kind": "t1",
                    "data": {
                      "subreddit_id": "t5_81eyvm",
                      "approved_at_utc": null,
                      "author_is_blocked": false,
                      "comment_type": null,
                      "awarders": [],
                      "mod_reason_by": null,
                      "banned_by": null,
                      "author_flair_type": "text",
                      "total_awards_received": 0,
                      "subreddit": "LocalLLaMA",
                      "author_flair_template_id": null,
                      "likes": null,
                      "replies": "",
                      "user_reports": [],
                      "saved": false,
                      "id": "n5fdpqy",
                      "banned_at_utc": null,
                      "mod_reason_title": null,
                      "gilded": 0,
                      "archived": false,
                      "collapsed_reason_code": null,
                      "no_follow": true,
                      "author": "Ok_Rub1689",
                      "can_mod_post": false,
                      "created_utc": 1753621635,
                      "send_replies": true,
                      "parent_id": "t1_n5fa2re",
                      "score": 3,
                      "author_fullname": "t2_iu3wj4b6",
                      "removal_reason": null,
                      "approved_by": null,
                      "mod_note": null,
                      "all_awardings": [],
                      "body": "thanks to your comment!",
                      "edited": false,
                      "top_awarded_type": null,
                      "author_flair_css_class": null,
                      "name": "t1_n5fdpqy",
                      "is_submitter": true,
                      "downs": 0,
                      "author_flair_richtext": [],
                      "author_patreon_flair": false,
                      "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thanks to your comment!&lt;/p&gt;\n&lt;/div&gt;",
                      "gildings": {},
                      "collapsed_reason": null,
                      "distinguished": null,
                      "associated_award": null,
                      "stickied": false,
                      "author_premium": false,
                      "can_gild": false,
                      "link_id": "t3_1maixye",
                      "unrepliable_reason": null,
                      "author_flair_text_color": null,
                      "score_hidden": false,
                      "permalink": "/r/LocalLLaMA/comments/1maixye/i_tried_implementing_the_crisp_paper_from_google/n5fdpqy/",
                      "subreddit_type": "public",
                      "locked": false,
                      "report_reasons": null,
                      "created": 1753621635,
                      "author_flair_text": null,
                      "treatment_tags": [],
                      "collapsed": false,
                      "subreddit_name_prefixed": "r/LocalLLaMA",
                      "controversiality": 0,
                      "depth": 1,
                      "author_flair_background_color": null,
                      "collapsed_because_crowd_control": null,
                      "mod_reports": [],
                      "num_reports": null,
                      "ups": 3
                    }
                  }
                ],
                "before": null
              }
            },
            "user_reports": [],
            "saved": false,
            "id": "n5fa2re",
            "banned_at_utc": null,
            "mod_reason_title": null,
            "gilded": 0,
            "archived": false,
            "collapsed_reason_code": null,
            "no_follow": false,
            "author": "Accomplished_Mode170",
            "can_mod_post": false,
            "created_utc": 1753620265,
            "send_replies": true,
            "parent_id": "t3_1maixye",
            "score": 7,
            "author_fullname": "t2_4hfmiefj",
            "approved_by": null,
            "mod_note": null,
            "all_awardings": [],
            "collapsed": false,
            "body": "Ha! I feel this SO much; love ColBERT and even got [DistilBERT doing maxsim via CLI](https://github.com/rabbidave/LatentSpace.Tools/blob/main/classify.md). Private SDK version just directly exposes the functions.\n\nLove that we could minimize the index required AND produce (presumably) more representative classes.\n\n❤️ this for local-first AI. Thank you 📊",
            "edited": false,
            "top_awarded_type": null,
            "author_flair_css_class": null,
            "name": "t1_n5fa2re",
            "is_submitter": false,
            "downs": 0,
            "author_flair_richtext": [],
            "author_patreon_flair": false,
            "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ha! I feel this SO much; love ColBERT and even got &lt;a href=\"https://github.com/rabbidave/LatentSpace.Tools/blob/main/classify.md\"&gt;DistilBERT doing maxsim via CLI&lt;/a&gt;. Private SDK version just directly exposes the functions.&lt;/p&gt;\n\n&lt;p&gt;Love that we could minimize the index required AND produce (presumably) more representative classes.&lt;/p&gt;\n\n&lt;p&gt;❤️ this for local-first AI. Thank you 📊&lt;/p&gt;\n&lt;/div&gt;",
            "removal_reason": null,
            "collapsed_reason": null,
            "distinguished": null,
            "associated_award": null,
            "stickied": false,
            "author_premium": false,
            "can_gild": false,
            "gildings": {},
            "unrepliable_reason": null,
            "author_flair_text_color": null,
            "score_hidden": false,
            "permalink": "/r/LocalLLaMA/comments/1maixye/i_tried_implementing_the_crisp_paper_from_google/n5fa2re/",
            "subreddit_type": "public",
            "locked": false,
            "report_reasons": null,
            "created": 1753620265,
            "author_flair_text": null,
            "treatment_tags": [],
            "link_id": "t3_1maixye",
            "subreddit_name_prefixed": "r/LocalLLaMA",
            "controversiality": 0,
            "depth": 0,
            "author_flair_background_color": null,
            "collapsed_because_crowd_control": null,
            "mod_reports": [],
            "num_reports": null,
            "ups": 7
          }
        }
      ],
      "before": null
    }
  }
]