import{j as e}from"./index-xfnGEtuL.js";import{R as t}from"./RedditPostRenderer-DAZRIZZK.js";import"./index-BaNn5-RR.js";const a=JSON.parse(`[{"kind":"Listing","data":{"after":null,"dist":1,"modhash":"","geo_filter":"","children":[{"kind":"t3","data":{"approved_at_utc":null,"subreddit":"LocalLLaMA","selftext":"Just designed the core architecture for a RAG agent. I’m testing the foundational decision:  \\n**Is it smart to use Langchain or LlamaIndex for this kind of agentic system? Or am I better off going more lightweight or custom?**\\n\\nI’ve included a visual of the architecture in the post. Would love your feedback, especially if you’ve worked with or scaled these frameworks.\\n\\n# 🔧 What I’m Building\\n\\nThis is a **simpler agentic RAG system**, designed to be modular and scalable, but lean enough to move fast. It’s not just a question-answer bot but structured with foresight to evolve into a fully agentic system later.\\n\\n**Core Components:**\\n\\n* A **Session Manager** for planning, task decomposition, and execution flow\\n* A **Vector Store** for context retrieval\\n* A **RAG pipeline** for combining retrieval + generation\\n* A **State &amp; Memory Unit** for session history, context tracking, and intermediate reasoning\\n* A clean chat I/O interface\\n\\n# 🧱 Design Principles\\n\\n* **Modularity**: Every component is cleanly separated\\n* **Progressive Architecture**: Built to scale into multi tool-using system\\n* **Context Awareness**: Dynamic memory and reasoning path tracking\\n* **Agentic Behavior**: Even in its early form, it plans, tracks, and self-updates\\n\\nWould love feedback on:\\n\\n* Whether Langchain or LlamaIndex make sense as the foundation here\\n* Where others hit scaling or architectural limitations with these\\n* How to avoid building into a box I’ll regret later\\n\\nIf this is the wrong move, I'd rather fix it now. Appreciate any insights.","user_reports":[],"saved":false,"mod_reason_title":null,"gilded":0,"clicked":false,"title":"Am I making a mistake building my RAG agent with Langchain or LlamaIndex?","link_flair_richtext":[{"e":"text","t":"Question | Help"}],"subreddit_name_prefixed":"r/LocalLLaMA","hidden":false,"pwls":6,"link_flair_css_class":"","downs":0,"thumbnail_height":116,"top_awarded_type":null,"hide_score":false,"name":"t3_1m6gwgl","quarantine":false,"link_flair_text_color":"dark","upvote_ratio":1,"author_flair_background_color":null,"ups":1,"total_awards_received":0,"media_embed":{},"thumbnail_width":140,"author_flair_template_id":null,"is_original_content":false,"author_fullname":"t2_hpqb9e8q","secure_media":null,"is_reddit_media_domain":true,"is_meta":false,"category":null,"secure_media_embed":{},"link_flair_text":"Question | Help","can_mod_post":false,"score":1,"approved_by":null,"is_created_from_ads_ui":false,"author_premium":false,"thumbnail":"https://b.thumbs.redditmedia.com/z4CEyTRNaRHdbhDKbWtTgySbGCfnpODod9OwS0FKfXc.jpg","edited":false,"author_flair_css_class":null,"author_flair_richtext":[],"gildings":{},"post_hint":"image","content_categories":null,"is_self":false,"subreddit_type":"public","created":1753197551,"link_flair_type":"richtext","wls":6,"removed_by_category":null,"banned_by":null,"author_flair_type":"text","domain":"i.redd.it","allow_live_comments":false,"selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\\"md\\"&gt;&lt;p&gt;Just designed the core architecture for a RAG agent. I’m testing the foundational decision:&lt;br/&gt;\\n&lt;strong&gt;Is it smart to use Langchain or LlamaIndex for this kind of agentic system? Or am I better off going more lightweight or custom?&lt;/strong&gt;&lt;/p&gt;\\n\\n&lt;p&gt;I’ve included a visual of the architecture in the post. Would love your feedback, especially if you’ve worked with or scaled these frameworks.&lt;/p&gt;\\n\\n&lt;h1&gt;🔧 What I’m Building&lt;/h1&gt;\\n\\n&lt;p&gt;This is a &lt;strong&gt;simpler agentic RAG system&lt;/strong&gt;, designed to be modular and scalable, but lean enough to move fast. It’s not just a question-answer bot but structured with foresight to evolve into a fully agentic system later.&lt;/p&gt;\\n\\n&lt;p&gt;&lt;strong&gt;Core Components:&lt;/strong&gt;&lt;/p&gt;\\n\\n&lt;ul&gt;\\n&lt;li&gt;A &lt;strong&gt;Session Manager&lt;/strong&gt; for planning, task decomposition, and execution flow&lt;/li&gt;\\n&lt;li&gt;A &lt;strong&gt;Vector Store&lt;/strong&gt; for context retrieval&lt;/li&gt;\\n&lt;li&gt;A &lt;strong&gt;RAG pipeline&lt;/strong&gt; for combining retrieval + generation&lt;/li&gt;\\n&lt;li&gt;A &lt;strong&gt;State &amp;amp; Memory Unit&lt;/strong&gt; for session history, context tracking, and intermediate reasoning&lt;/li&gt;\\n&lt;li&gt;A clean chat I/O interface&lt;/li&gt;\\n&lt;/ul&gt;\\n\\n&lt;h1&gt;🧱 Design Principles&lt;/h1&gt;\\n\\n&lt;ul&gt;\\n&lt;li&gt;&lt;strong&gt;Modularity&lt;/strong&gt;: Every component is cleanly separated&lt;/li&gt;\\n&lt;li&gt;&lt;strong&gt;Progressive Architecture&lt;/strong&gt;: Built to scale into multi tool-using system&lt;/li&gt;\\n&lt;li&gt;&lt;strong&gt;Context Awareness&lt;/strong&gt;: Dynamic memory and reasoning path tracking&lt;/li&gt;\\n&lt;li&gt;&lt;strong&gt;Agentic Behavior&lt;/strong&gt;: Even in its early form, it plans, tracks, and self-updates&lt;/li&gt;\\n&lt;/ul&gt;\\n\\n&lt;p&gt;Would love feedback on:&lt;/p&gt;\\n\\n&lt;ul&gt;\\n&lt;li&gt;Whether Langchain or LlamaIndex make sense as the foundation here&lt;/li&gt;\\n&lt;li&gt;Where others hit scaling or architectural limitations with these&lt;/li&gt;\\n&lt;li&gt;How to avoid building into a box I’ll regret later&lt;/li&gt;\\n&lt;/ul&gt;\\n\\n&lt;p&gt;If this is the wrong move, I&amp;#39;d rather fix it now. Appreciate any insights.&lt;/p&gt;\\n&lt;/div&gt;&lt;!-- SC_ON --&gt;","likes":null,"suggested_sort":null,"banned_at_utc":null,"url_overridden_by_dest":"https://i.redd.it/zptnshw2yfef1.png","view_count":null,"archived":false,"no_follow":true,"is_crosspostable":false,"pinned":false,"over_18":false,"preview":{"images":[{"source":{"url":"https://preview.redd.it/zptnshw2yfef1.png?auto=webp&amp;s=76e75b90a419c582aabc49fe139e7c91afe65a89","width":847,"height":702},"resolutions":[{"url":"https://preview.redd.it/zptnshw2yfef1.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=7ffe2b2f0146b5018418f2cf8a47aa964f7d008b","width":108,"height":89},{"url":"https://preview.redd.it/zptnshw2yfef1.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b1855fe9db743f1b2243d7403d41f5e2cce1d1e1","width":216,"height":179},{"url":"https://preview.redd.it/zptnshw2yfef1.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=24992bb3d858161a69debf7f29be67edbf56aa85","width":320,"height":265},{"url":"https://preview.redd.it/zptnshw2yfef1.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=501fc562aaff34d23aba6f075a85b7873e823e86","width":640,"height":530}],"variants":{},"id":"7ez5SdWmQCvcDpjSTikUtrexkFQ86FGFNJ_9HyyGiEQ"}],"enabled":true},"all_awardings":[],"awarders":[],"media_only":false,"link_flair_template_id":"2c9831e6-bf92-11ed-98e6-d2b8bcc02ae1","can_gild":false,"spoiler":false,"locked":false,"author_flair_text":null,"treatment_tags":[],"visited":false,"removed_by":null,"mod_note":null,"distinguished":null,"subreddit_id":"t5_81eyvm","author_is_blocked":false,"mod_reason_by":null,"num_reports":null,"removal_reason":null,"link_flair_background_color":"#5a74cc","id":"1m6gwgl","is_robot_indexable":true,"num_duplicates":0,"report_reasons":null,"author":"duke_x91","discussion_type":null,"num_comments":9,"send_replies":true,"media":null,"contest_mode":false,"author_patreon_flair":false,"author_flair_text_color":null,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/","stickied":false,"url":"https://i.redd.it/zptnshw2yfef1.png","subreddit_subscribers":503254,"created_utc":1753197551,"num_crossposts":0,"mod_reports":[],"is_video":false}}],"before":null}},{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":"","user_reports":[],"saved":false,"id":"n4nvmpo","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"duke_x91","can_mod_post":false,"send_replies":true,"parent_id":"t1_n4kjqq8","score":1,"author_fullname":"t2_hpqb9e8q","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"Thanks for the clarification, and I totally agree that you wouldn’t update Python packages directly in production.\\n\\nWhat I was pointing out is more about the maintenance overhead during development. If I want to pull in a newer version (let's say of langchain-core) to try out a new module or feature, I’m concerned that updates might introduce breaking changes, especially if I'm relying on some of the higher-level abstractions.\\n\\nFrom what I’ve seen and read, LangChain in its earlier stages had frequent updates that broke interfaces or changed behavior. Many users had to refactor pipelines or toolchains just to stay compatible. That kind of ongoing work, even if caught in dev, can slow things down and increase the long-term cost of staying up to date.\\n\\nI’m still experimenting, but that’s why I’m leaning toward keeping my code modular and avoiding deep integration/coupling to any single framework.","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4nvmpo","is_submitter":true,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Thanks for the clarification, and I totally agree that you wouldn’t update Python packages directly in production.&lt;/p&gt;\\n\\n&lt;p&gt;What I was pointing out is more about the maintenance overhead during development. If I want to pull in a newer version (let&amp;#39;s say of langchain-core) to try out a new module or feature, I’m concerned that updates might introduce breaking changes, especially if I&amp;#39;m relying on some of the higher-level abstractions.&lt;/p&gt;\\n\\n&lt;p&gt;From what I’ve seen and read, LangChain in its earlier stages had frequent updates that broke interfaces or changed behavior. Many users had to refactor pipelines or toolchains just to stay compatible. That kind of ongoing work, even if caught in dev, can slow things down and increase the long-term cost of staying up to date.&lt;/p&gt;\\n\\n&lt;p&gt;I’m still experimenting, but that’s why I’m leaning toward keeping my code modular and avoiding deep integration/coupling to any single framework.&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1m6gwgl","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4nvmpo/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753248557,"author_flair_text":null,"treatment_tags":[],"created_utc":1753248557,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":3,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}},"user_reports":[],"saved":false,"id":"n4kjqq8","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"GortKlaatu_","can_mod_post":false,"send_replies":true,"parent_id":"t1_n4k71ar","score":2,"author_fullname":"t2_ixeagk4w","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"body":"Why would you be updating python packages in production?\\n\\nLanggraph is very straight forward so it's not going to change much, langchain has had some growing pains, but with a simple RAG setup or even a more complicated RAG setup with reranker and query reformatter, you really shouldn't run into huge difficulties and you'd catch any breaking changes in dev. (same applies to any python library change).\\n\\nAs you reduce hallucination and improve the quality of your RAG results, you're going to appreciate the modularity that langgraph allows. Remember that just because you use langgraph does not mean you have to use langchain.","edited":1753208980,"top_awarded_type":null,"downs":0,"author_flair_css_class":null,"name":"t1_n4kjqq8","is_submitter":false,"collapsed":false,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Why would you be updating python packages in production?&lt;/p&gt;\\n\\n&lt;p&gt;Langgraph is very straight forward so it&amp;#39;s not going to change much, langchain has had some growing pains, but with a simple RAG setup or even a more complicated RAG setup with reranker and query reformatter, you really shouldn&amp;#39;t run into huge difficulties and you&amp;#39;d catch any breaking changes in dev. (same applies to any python library change).&lt;/p&gt;\\n\\n&lt;p&gt;As you reduce hallucination and improve the quality of your RAG results, you&amp;#39;re going to appreciate the modularity that langgraph allows. Remember that just because you use langgraph does not mean you have to use langchain.&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1m6gwgl","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4kjqq8/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753208544,"author_flair_text":null,"treatment_tags":[],"created_utc":1753208544,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":2,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":2}}],"before":null}},"user_reports":[],"saved":false,"id":"n4k71ar","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"duke_x91","can_mod_post":false,"created_utc":1753205075,"send_replies":true,"parent_id":"t1_n4jlrp0","score":1,"author_fullname":"t2_hpqb9e8q","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"body":"I am quite new to building AI agents myself and I’ve had an easy time using LangGraph as well. However, I’ve heard that frequent updates to the framework introduces breaking changes and that using these frameworks in production is quite risky. What are your thoughts on it?","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4k71ar","is_submitter":true,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;I am quite new to building AI agents myself and I’ve had an easy time using LangGraph as well. However, I’ve heard that frequent updates to the framework introduces breaking changes and that using these frameworks in production is quite risky. What are your thoughts on it?&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1m6gwgl","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4k71ar/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753205075,"author_flair_text":null,"treatment_tags":[],"collapsed":false,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":1,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}},"user_reports":[],"saved":false,"id":"n4jlrp0","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"Bobalo666","can_mod_post":false,"created_utc":1753199219,"send_replies":true,"parent_id":"t3_1m6gwgl","score":3,"author_fullname":"t2_dwwmr","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"I found it easier to set up an agentic system using LangGraph instead of LangChain. Still in the LangChain family, but the support for agentic set ups in LangGraph is stronger since they are trying to migrate users over","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4jlrp0","is_submitter":false,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;I found it easier to set up an agentic system using LangGraph instead of LangChain. Still in the LangChain family, but the support for agentic set ups in LangGraph is stronger since they are trying to migrate users over&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4jlrp0/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753199219,"author_flair_text":null,"treatment_tags":[],"link_id":"t3_1m6gwgl","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":3}},{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":"","user_reports":[],"saved":false,"id":"n4jn263","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"duke_x91","can_mod_post":false,"created_utc":1753199576,"send_replies":true,"parent_id":"t1_n4jin57","score":1,"author_fullname":"t2_hpqb9e8q","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"body":"Hey!  \\nAppreciate the valuable feedback and you sharing your experience. Building your own system to manage the modules/components used in your product sounds interesting.\\n\\nMy main takeaway from your experience is that you'd suggest keeping things minimal and modular when using these frameworks, especially to handle breaking changes down the line since the docs and source code are frequently updated. \\n\\nAlso, writing all that on a moving bus? Respect. 🙌","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4jn263","is_submitter":true,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Hey!&lt;br/&gt;\\nAppreciate the valuable feedback and you sharing your experience. Building your own system to manage the modules/components used in your product sounds interesting.&lt;/p&gt;\\n\\n&lt;p&gt;My main takeaway from your experience is that you&amp;#39;d suggest keeping things minimal and modular when using these frameworks, especially to handle breaking changes down the line since the docs and source code are frequently updated. &lt;/p&gt;\\n\\n&lt;p&gt;Also, writing all that on a moving bus? Respect. 🙌&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1m6gwgl","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4jn263/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753199576,"author_flair_text":null,"treatment_tags":[],"collapsed":false,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":1,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}},"user_reports":[],"saved":false,"id":"n4jin57","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"____vladrad","can_mod_post":false,"created_utc":1753198361,"send_replies":true,"parent_id":"t3_1m6gwgl","score":2,"author_fullname":"t2_u6i8a0ay","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"Hey! \\n\\nI went down the road of using llamaindex and langchain. \\n\\nBoth are great at what they do and in parts of my projects I still use them. The problem for me at the time was the documentation was changing super fast and I couldn’t tell what to use. The deeper I went in the frame work the harder I found it to debug. Heck even getting it to log out debug was hard. I ended up building my own IDE that is composed of basic calls from langchain. By that I mean it’s really good at providing you ready to go components, like a qwen/llama/openai wrapper etc. I use the most basic building blocks of their frameworks and pull things in as needed. The rest is my own stuff. Both are great but you’re going to need to look under the hood sometimes to understand where their prompts come from etc. If I had to pick one I’d most likely go with langchain since I see a lot of companies now building with it. Rumors are it’s becoming a unicorn company. Which ever you pick I’d recommend become the John Wick of that framework and really learn it.\\n\\nPs sorry was on a moving bus when I wrote this, good luck","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4jin57","is_submitter":false,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Hey! &lt;/p&gt;\\n\\n&lt;p&gt;I went down the road of using llamaindex and langchain. &lt;/p&gt;\\n\\n&lt;p&gt;Both are great at what they do and in parts of my projects I still use them. The problem for me at the time was the documentation was changing super fast and I couldn’t tell what to use. The deeper I went in the frame work the harder I found it to debug. Heck even getting it to log out debug was hard. I ended up building my own IDE that is composed of basic calls from langchain. By that I mean it’s really good at providing you ready to go components, like a qwen/llama/openai wrapper etc. I use the most basic building blocks of their frameworks and pull things in as needed. The rest is my own stuff. Both are great but you’re going to need to look under the hood sometimes to understand where their prompts come from etc. If I had to pick one I’d most likely go with langchain since I see a lot of companies now building with it. Rumors are it’s becoming a unicorn company. Which ever you pick I’d recommend become the John Wick of that framework and really learn it.&lt;/p&gt;\\n\\n&lt;p&gt;Ps sorry was on a moving bus when I wrote this, good luck&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4jin57/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753198361,"author_flair_text":null,"treatment_tags":[],"link_id":"t3_1m6gwgl","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":2}},{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"richtext","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":"ed89e5c6-72f1-11ee-9954-1697022cd89d","likes":null,"replies":"","user_reports":[],"saved":false,"id":"n4kblix","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"segmond","can_mod_post":false,"created_utc":1753206304,"send_replies":true,"parent_id":"t3_1m6gwgl","score":1,"author_fullname":"t2_ah13x","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"Not if you're learning.","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4kblix","is_submitter":false,"downs":0,"author_flair_richtext":[{"e":"text","t":"llama.cpp"}],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Not if you&amp;#39;re learning.&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":"light","score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4kblix/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753206304,"author_flair_text":"llama.cpp","treatment_tags":[],"link_id":"t3_1m6gwgl","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":"#bbbdbf","collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}},{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":"","user_reports":[],"saved":false,"id":"n4oxsku","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"duke_x91","can_mod_post":false,"created_utc":1753269172,"send_replies":true,"parent_id":"t1_n4olchg","score":1,"author_fullname":"t2_hpqb9e8q","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"body":"This is exactly the kind of insight I was looking for. I totally get what you mean about duct-taped Legos and the retriever whispering nonsense 😅\\n\\nI’ve been trying to keep the orchestration layer as clean and lightweight as possible for that same reason. What you said about needing tight control over chunking, retrieval, and memory really clicks. That is where I feel like things fall apart once you go beyond simple Q&amp;A.\\n\\nReally appreciate the reminder to decouple early and suggesting that thinking about these libraries as toolkits instead of the foundation. This is definitely the right mindset.\\n\\nThanks again for sharing your experience. Super helpful!","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4oxsku","is_submitter":true,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;This is exactly the kind of insight I was looking for. I totally get what you mean about duct-taped Legos and the retriever whispering nonsense 😅&lt;/p&gt;\\n\\n&lt;p&gt;I’ve been trying to keep the orchestration layer as clean and lightweight as possible for that same reason. What you said about needing tight control over chunking, retrieval, and memory really clicks. That is where I feel like things fall apart once you go beyond simple Q&amp;amp;A.&lt;/p&gt;\\n\\n&lt;p&gt;Really appreciate the reminder to decouple early and suggesting that thinking about these libraries as toolkits instead of the foundation. This is definitely the right mindset.&lt;/p&gt;\\n\\n&lt;p&gt;Thanks again for sharing your experience. Super helpful!&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1m6gwgl","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4oxsku/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753269172,"author_flair_text":null,"treatment_tags":[],"collapsed":false,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":1,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}},"user_reports":[],"saved":false,"id":"n4olchg","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"wfgy_engine","can_mod_post":false,"created_utc":1753262822,"send_replies":true,"parent_id":"t3_1m6gwgl","score":1,"author_fullname":"t2_1tgp8l87vk","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"Been in that exact trench, and yeah—making that foundational call early on can either feel like laying a launchpad… or digging your own grave 😅\\n\\nLangchain gives you Legos but sometimes wraps them in duct tape. LlamaIndex’s doc abstraction is cleaner, but once you hit multi-step agentic orchestration with dynamic memory, both start sweating a little.\\n\\nI ended up rewriing the orchestration layer myself after too many “why is this retriever whispering nonsense?” moments. If your agent’s going to reason over time, update state mid-convo, and plan subtasks, you’ll want surgical control over chunk boundaries, retrieval biasing, and memory scope.\\n\\nI still use bits of both libraries—but the key was decoupling them \\\\*early\\\\*, treating them like toolkits, not foundations.\\n\\nTL;DR: If you're already thinking modular + agentic, you're on the right path. Just be ready to rip out anything that slows down reasoning clarity.","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n4olchg","is_submitter":false,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Been in that exact trench, and yeah—making that foundational call early on can either feel like laying a launchpad… or digging your own grave 😅&lt;/p&gt;\\n\\n&lt;p&gt;Langchain gives you Legos but sometimes wraps them in duct tape. LlamaIndex’s doc abstraction is cleaner, but once you hit multi-step agentic orchestration with dynamic memory, both start sweating a little.&lt;/p&gt;\\n\\n&lt;p&gt;I ended up rewriing the orchestration layer myself after too many “why is this retriever whispering nonsense?” moments. If your agent’s going to reason over time, update state mid-convo, and plan subtasks, you’ll want surgical control over chunk boundaries, retrieval biasing, and memory scope.&lt;/p&gt;\\n\\n&lt;p&gt;I still use bits of both libraries—but the key was decoupling them *early*, treating them like toolkits, not foundations.&lt;/p&gt;\\n\\n&lt;p&gt;TL;DR: If you&amp;#39;re already thinking modular + agentic, you&amp;#39;re on the right path. Just be ready to rip out anything that slows down reasoning clarity.&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1m6gwgl/am_i_making_a_mistake_building_my_rag_agent_with/n4olchg/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1753262822,"author_flair_text":null,"treatment_tags":[],"link_id":"t3_1m6gwgl","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}}]`),r=()=>e.jsx(t,{data:a});export{r as default};
