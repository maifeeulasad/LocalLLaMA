import{j as e}from"./index-BOnf-UhU.js";import{R as t}from"./RedditPostRenderer-Ce39qICS.js";import"./index-CDase6VD.js";const n=JSON.parse(`[{"kind":"Listing","data":{"after":null,"dist":1,"modhash":"","geo_filter":"","children":[{"kind":"t3","data":{"approved_at_utc":null,"subreddit":"LocalLLaMA","selftext":"Are the tokens generated during the thinking stage taken into consideration at all? Are they treated similar to context? What about attention?\\n\\nMy goal for the question is to understand if I could override the thinking manually with specific information closely relevant to the question. Similar to RAG, but without the need for context re-processing, and with the more specific, pre-defined information inserted algorithmically from prepared files.\\n\\nBasically, how would a thinking model (and perhaps non-thinking model with some additional guidelines) react if it was fed with impersonated &lt;think&gt; &lt;/think&gt; block containing critical information.\\n\\nI know that starting the message with impersonation affects the models output, but I don't fully understand how the model understands the information inserted this way.","user_reports":[],"saved":false,"mod_reason_title":null,"gilded":0,"clicked":false,"title":"Is knowledge found in the thinking taken into consideration by the LLM?","link_flair_richtext":[{"e":"text","t":"Question | Help"}],"subreddit_name_prefixed":"r/LocalLLaMA","hidden":false,"pwls":6,"link_flair_css_class":"","downs":0,"thumbnail_height":null,"top_awarded_type":null,"hide_score":false,"name":"t3_1lvcyvf","quarantine":false,"link_flair_text_color":"dark","upvote_ratio":0.84,"author_flair_background_color":null,"subreddit_type":"public","ups":4,"total_awards_received":0,"media_embed":{},"thumbnail_width":null,"author_flair_template_id":null,"is_original_content":false,"author_fullname":"t2_qafso","secure_media":null,"is_reddit_media_domain":false,"is_meta":false,"category":null,"secure_media_embed":{},"link_flair_text":"Question | Help","can_mod_post":false,"score":4,"approved_by":null,"is_created_from_ads_ui":false,"author_premium":false,"thumbnail":"self","edited":false,"author_flair_css_class":null,"author_flair_richtext":[],"gildings":{},"content_categories":null,"is_self":true,"mod_note":null,"created":1752047574,"link_flair_type":"richtext","wls":6,"removed_by_category":null,"banned_by":null,"author_flair_type":"text","domain":"self.LocalLLaMA","allow_live_comments":false,"selftext_html":"&lt;!-- SC_OFF --&gt;&lt;div class=\\"md\\"&gt;&lt;p&gt;Are the tokens generated during the thinking stage taken into consideration at all? Are they treated similar to context? What about attention?&lt;/p&gt;\\n\\n&lt;p&gt;My goal for the question is to understand if I could override the thinking manually with specific information closely relevant to the question. Similar to RAG, but without the need for context re-processing, and with the more specific, pre-defined information inserted algorithmically from prepared files.&lt;/p&gt;\\n\\n&lt;p&gt;Basically, how would a thinking model (and perhaps non-thinking model with some additional guidelines) react if it was fed with impersonated &amp;lt;think&amp;gt; &amp;lt;/think&amp;gt; block containing critical information.&lt;/p&gt;\\n\\n&lt;p&gt;I know that starting the message with impersonation affects the models output, but I don&amp;#39;t fully understand how the model understands the information inserted this way.&lt;/p&gt;\\n&lt;/div&gt;&lt;!-- SC_ON --&gt;","likes":null,"suggested_sort":null,"banned_at_utc":null,"view_count":null,"archived":false,"no_follow":false,"is_crosspostable":false,"pinned":false,"over_18":false,"all_awardings":[],"awarders":[],"media_only":false,"link_flair_template_id":"2c9831e6-bf92-11ed-98e6-d2b8bcc02ae1","can_gild":false,"spoiler":false,"locked":false,"author_flair_text":null,"treatment_tags":[],"visited":false,"removed_by":null,"num_reports":null,"distinguished":null,"subreddit_id":"t5_81eyvm","author_is_blocked":false,"mod_reason_by":null,"removal_reason":null,"link_flair_background_color":"#5a74cc","id":"1lvcyvf","is_robot_indexable":true,"num_duplicates":0,"report_reasons":null,"author":"kaisurniwurer","discussion_type":null,"num_comments":6,"send_replies":true,"media":null,"contest_mode":false,"author_patreon_flair":false,"author_flair_text_color":null,"permalink":"/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/","stickied":false,"url":"https://www.reddit.com/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/","subreddit_subscribers":497025,"created_utc":1752047574,"num_crossposts":0,"mod_reports":[],"is_video":false}}],"before":null}},{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":{"kind":"Listing","data":{"after":null,"dist":null,"modhash":"","geo_filter":"","children":[{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":"","user_reports":[],"saved":false,"id":"n25rkxr","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"martinerous","can_mod_post":false,"send_replies":true,"parent_id":"t1_n25d2xz","score":1,"author_fullname":"t2_5tp54ey","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"body":"I'm using my own custom frontend both for APIs and Koboldcpp. I haven't worked with the cache directly, but I know that system prompt is just a specifically formatted block that comes first when the context is formatted according to the model's chat template.\\n\\nSo, if you change something in the system prompt, the entire context needs to be regenerated because the beginning of the context has been changed.\\n\\nBut if you change some later parts of the context for whatever purposes, then the beginning of the context can remain cached.\\n\\nImpersonation (as \\"write for me\\") is nothing special, it just sends the same context to the LLM and asks it to continue writing for a specific character, which happens to be treated as user's character in the UI.\\n\\nIn my own frontend, I use \\"user\\" role only for commands. All the character messages are written in the \\"assistant\\" role messages, according to the chat template (or API calls). This way my solution supports multicharacter roleplay, no matter which characters are controlled by AI or user. AI just thinks it keeps writing a never-ending conversation with many people (and that's what I also instruct it to do in the system prompt).\\n\\nTo use thinking models, I usually short-circuit the &lt;think&gt;&lt;/think&gt;. In theory, I could feed in some more information in those tags, but it would not help more than system prompt does anyway. As models are not able to process &lt;think&gt; in between their text and my assistant message is a single large blob, I usually have just a single &lt;think&gt; pair in the entire context. Of course, as the conversation history grows, I'll need to cut off stuff right after &lt;think&gt;, otherwise the models can become quite incoherent as the context grows. Haven't yet implement summarization, which would be nice to have.\\n\\nSo, to summarize - there's no special magic about &lt;think&gt; and system prompt. They are just fragments of the context that an LLM tries to continue.\\n\\nI have seen a paper about thinking in latent space - that would be something special, but I'm not aware of any LLM already using it.","edited":1752062417,"top_awarded_type":null,"downs":0,"author_flair_css_class":null,"name":"t1_n25rkxr","is_submitter":false,"collapsed":false,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;I&amp;#39;m using my own custom frontend both for APIs and Koboldcpp. I haven&amp;#39;t worked with the cache directly, but I know that system prompt is just a specifically formatted block that comes first when the context is formatted according to the model&amp;#39;s chat template.&lt;/p&gt;\\n\\n&lt;p&gt;So, if you change something in the system prompt, the entire context needs to be regenerated because the beginning of the context has been changed.&lt;/p&gt;\\n\\n&lt;p&gt;But if you change some later parts of the context for whatever purposes, then the beginning of the context can remain cached.&lt;/p&gt;\\n\\n&lt;p&gt;Impersonation (as &amp;quot;write for me&amp;quot;) is nothing special, it just sends the same context to the LLM and asks it to continue writing for a specific character, which happens to be treated as user&amp;#39;s character in the UI.&lt;/p&gt;\\n\\n&lt;p&gt;In my own frontend, I use &amp;quot;user&amp;quot; role only for commands. All the character messages are written in the &amp;quot;assistant&amp;quot; role messages, according to the chat template (or API calls). This way my solution supports multicharacter roleplay, no matter which characters are controlled by AI or user. AI just thinks it keeps writing a never-ending conversation with many people (and that&amp;#39;s what I also instruct it to do in the system prompt).&lt;/p&gt;\\n\\n&lt;p&gt;To use thinking models, I usually short-circuit the &amp;lt;think&amp;gt;&amp;lt;/think&amp;gt;. In theory, I could feed in some more information in those tags, but it would not help more than system prompt does anyway. As models are not able to process &amp;lt;think&amp;gt; in between their text and my assistant message is a single large blob, I usually have just a single &amp;lt;think&amp;gt; pair in the entire context. Of course, as the conversation history grows, I&amp;#39;ll need to cut off stuff right after &amp;lt;think&amp;gt;, otherwise the models can become quite incoherent as the context grows. Haven&amp;#39;t yet implement summarization, which would be nice to have.&lt;/p&gt;\\n\\n&lt;p&gt;So, to summarize - there&amp;#39;s no special magic about &amp;lt;think&amp;gt; and system prompt. They are just fragments of the context that an LLM tries to continue.&lt;/p&gt;\\n\\n&lt;p&gt;I have seen a paper about thinking in latent space - that would be something special, but I&amp;#39;m not aware of any LLM already using it.&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1lvcyvf","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/n25rkxr/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1752062209,"author_flair_text":null,"treatment_tags":[],"created_utc":1752062209,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":2,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}},"user_reports":[],"saved":false,"id":"n25d2xz","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"kaisurniwurer","can_mod_post":false,"created_utc":1752055921,"send_replies":true,"parent_id":"t1_n24zv0b","score":2,"author_fullname":"t2_qafso","removal_reason":null,"approved_by":null,"mod_note":null,"all_awardings":[],"body":"That's the point actually, to influence only the current response with some additional information, spoon fed by another LLM keeping track of something specific or just from a simpler algorithm, then reject the information and do it again for the next response, with updated information.\\n\\nIs there a difference then between pushing information in &lt;think&gt; tags and inserting message as system before the next generation?\\n\\nWhy does the second option require context recalculation and impersonating doesn't, is it just matter of how does the SillyTavern or Koboldcpp handle it?","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n25d2xz","is_submitter":true,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;That&amp;#39;s the point actually, to influence only the current response with some additional information, spoon fed by another LLM keeping track of something specific or just from a simpler algorithm, then reject the information and do it again for the next response, with updated information.&lt;/p&gt;\\n\\n&lt;p&gt;Is there a difference then between pushing information in &amp;lt;think&amp;gt; tags and inserting message as system before the next generation?&lt;/p&gt;\\n\\n&lt;p&gt;Why does the second option require context recalculation and impersonating doesn&amp;#39;t, is it just matter of how does the SillyTavern or Koboldcpp handle it?&lt;/p&gt;\\n&lt;/div&gt;","gildings":{},"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"link_id":"t3_1lvcyvf","unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/n25d2xz/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1752055921,"author_flair_text":null,"treatment_tags":[],"collapsed":false,"subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":1,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":2}}],"before":null}},"user_reports":[],"saved":false,"id":"n24zv0b","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":false,"author":"Mart-McUH","can_mod_post":false,"created_utc":1752048549,"send_replies":true,"parent_id":"t3_1lvcyvf","score":5,"author_fullname":"t2_q3eqbw2b","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"Of course, that is the point of them. How well the model will take them into consideration is other thing. However, they are usually cut for following messages (eg not part of prompt for follow up conversation) so they generally only influence the immediate response (but if you use local solution this you can change in frontend, nothing forbids you from keeping the thinking from all responses in prompt though it can flood context quickly).\\n\\nPrefilling &lt;think&gt;&lt;/think&gt; with \\"custom thoughts\\" is common technique (at least in RP) and it is sometimes also used empty to make reasoning model function as non-reasoning.\\n\\nAt the end it is just standard prompt, nothing else. The only difference (vs non-reasoning) model is that the LLM was trained in specific way to work with it better (eg trained specifically to generate thoughts and maybe to use those thoughts in answer, but even non-reasoning model, when instructed, will do it to some degree).","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n24zv0b","is_submitter":false,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Of course, that is the point of them. How well the model will take them into consideration is other thing. However, they are usually cut for following messages (eg not part of prompt for follow up conversation) so they generally only influence the immediate response (but if you use local solution this you can change in frontend, nothing forbids you from keeping the thinking from all responses in prompt though it can flood context quickly).&lt;/p&gt;\\n\\n&lt;p&gt;Prefilling &amp;lt;think&amp;gt;&amp;lt;/think&amp;gt; with &amp;quot;custom thoughts&amp;quot; is common technique (at least in RP) and it is sometimes also used empty to make reasoning model function as non-reasoning.&lt;/p&gt;\\n\\n&lt;p&gt;At the end it is just standard prompt, nothing else. The only difference (vs non-reasoning) model is that the LLM was trained in specific way to work with it better (eg trained specifically to generate thoughts and maybe to use those thoughts in answer, but even non-reasoning model, when instructed, will do it to some degree).&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/n24zv0b/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1752048549,"author_flair_text":null,"treatment_tags":[],"link_id":"t3_1lvcyvf","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":5}},{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"text","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":null,"likes":null,"replies":"","user_reports":[],"saved":false,"id":"n269r3i","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"rnosov","can_mod_post":false,"created_utc":1752068415,"send_replies":true,"parent_id":"t3_1lvcyvf","score":2,"author_fullname":"t2_18x6fa","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"I actually did some testing regarding this by fine-tuning counterfactual information in Qwen3 (like Paris being the capital of Germany). Reasoning block was normal (Berlin identified correctly) but the actual answer was Paris meaning it completely ignored it's own reasoning and went with the counterfactual info. These reasoning chains are typically resulting from preference optimizations like GRPO which seem to be a much \\"weaker\\" form of training than supervised fine-tuning or pre-training. \\n\\nI think model does consider its thinking block when it's \\"on the fence\\" or not 100% sure about something. So if what you insert generally aligns with its prior knowledge it will take it into consideration. Also, thinking blocks are treated like normal context so you won't really get any context processing speed-up.","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n269r3i","is_submitter":false,"downs":0,"author_flair_richtext":[],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;I actually did some testing regarding this by fine-tuning counterfactual information in Qwen3 (like Paris being the capital of Germany). Reasoning block was normal (Berlin identified correctly) but the actual answer was Paris meaning it completely ignored it&amp;#39;s own reasoning and went with the counterfactual info. These reasoning chains are typically resulting from preference optimizations like GRPO which seem to be a much &amp;quot;weaker&amp;quot; form of training than supervised fine-tuning or pre-training. &lt;/p&gt;\\n\\n&lt;p&gt;I think model does consider its thinking block when it&amp;#39;s &amp;quot;on the fence&amp;quot; or not 100% sure about something. So if what you insert generally aligns with its prior knowledge it will take it into consideration. Also, thinking blocks are treated like normal context so you won&amp;#39;t really get any context processing speed-up.&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":null,"score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/n269r3i/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1752068415,"author_flair_text":null,"treatment_tags":[],"link_id":"t3_1lvcyvf","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":null,"collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":2}},{"kind":"t1","data":{"subreddit_id":"t5_81eyvm","approved_at_utc":null,"author_is_blocked":false,"comment_type":null,"awarders":[],"mod_reason_by":null,"banned_by":null,"author_flair_type":"richtext","total_awards_received":0,"subreddit":"LocalLLaMA","author_flair_template_id":"ed89e5c6-72f1-11ee-9954-1697022cd89d","likes":null,"replies":"","user_reports":[],"saved":false,"id":"n28hptt","banned_at_utc":null,"mod_reason_title":null,"gilded":0,"archived":false,"collapsed_reason_code":null,"no_follow":true,"author":"ttkciar","can_mod_post":false,"created_utc":1752090561,"send_replies":true,"parent_id":"t3_1lvcyvf","score":1,"author_fullname":"t2_cpegz","approved_by":null,"mod_note":null,"all_awardings":[],"collapsed":false,"body":"Yes, that's exactly how LLM inference works.\\n\\nThe user's prompt is put into the context, and the entire contents of the context is inferred upon to come up with the next token.  That token is appended to the context, and the whole inference starts over again on the updated context to find the new next token.\\n\\nTokens in context which came from RAG, or the user, or \\"thinking\\", or anything else, are all taken into account on each iteration.","edited":false,"top_awarded_type":null,"author_flair_css_class":null,"name":"t1_n28hptt","is_submitter":false,"downs":0,"author_flair_richtext":[{"e":"text","t":"llama.cpp"}],"author_patreon_flair":false,"body_html":"&lt;div class=\\"md\\"&gt;&lt;p&gt;Yes, that&amp;#39;s exactly how LLM inference works.&lt;/p&gt;\\n\\n&lt;p&gt;The user&amp;#39;s prompt is put into the context, and the entire contents of the context is inferred upon to come up with the next token.  That token is appended to the context, and the whole inference starts over again on the updated context to find the new next token.&lt;/p&gt;\\n\\n&lt;p&gt;Tokens in context which came from RAG, or the user, or &amp;quot;thinking&amp;quot;, or anything else, are all taken into account on each iteration.&lt;/p&gt;\\n&lt;/div&gt;","removal_reason":null,"collapsed_reason":null,"distinguished":null,"associated_award":null,"stickied":false,"author_premium":false,"can_gild":false,"gildings":{},"unrepliable_reason":null,"author_flair_text_color":"light","score_hidden":false,"permalink":"/r/LocalLLaMA/comments/1lvcyvf/is_knowledge_found_in_the_thinking_taken_into/n28hptt/","subreddit_type":"public","locked":false,"report_reasons":null,"created":1752090561,"author_flair_text":"llama.cpp","treatment_tags":[],"link_id":"t3_1lvcyvf","subreddit_name_prefixed":"r/LocalLLaMA","controversiality":0,"depth":0,"author_flair_background_color":"#bbbdbf","collapsed_because_crowd_control":null,"mod_reports":[],"num_reports":null,"ups":1}}],"before":null}}]`),i=()=>e.jsx(t,{data:n});export{i as default};
